steps:
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: 'Use Terraform 1.1.4'
  inputs:
    terraformVersion: 1.1.4

    steps:
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform init'
  inputs:
    command: init
    workingDirectory: '$(System.DefaultWorkingDirectory)/_Terraform-CloudflareDNS-CI/drop'
    backendType: azurerm
    backendServiceArm: 'luke.geek.nz (0000000-0000-0000-0000-00000)'
    backendAzureRmResourceGroupName: 'z_Infrastructure'
    backendAzureRmStorageAccountName: infraascode
    backendAzureRmContainerName: 'ac-cloudflare-terraform'
    backendAzureRmKey: terraform.tfstate


    steps:
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform validate'
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)/_Terraform-CloudflareDNS-CI/drop'


    steps:

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0

  displayName: 'terraform plan'

  inputs:

    command: plan

    workingDirectory: '$(System.DefaultWorkingDirectory)/_Terraform-CloudflareDNS-CI/drop'

    environmentServiceName: 'luke.geek.nz (0000000-0000-0000-0000-00000)'